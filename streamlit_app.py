import streamlit as st
import pandas as pd
from io import BytesIO
from datetime import datetime
import math

st.set_page_config(page_title="Transfer Ã–neri UygulamasÄ±", layout="wide")
st.title("ðŸ“¦ MaÄŸazalar ArasÄ± Transfer Ã–nerisi")

uploaded_file = st.file_uploader("Excel dosyasÄ±nÄ± yÃ¼kleyin", type=[".xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)

    df_filtered = df[df["Mag. S/S"] > 0].copy()
    df_filtered = df_filtered[df_filtered["Mgz Stok Ad."] > 0]
    df_filtered["Stok Rezerve Ad."] = df_filtered["Stok Rezerve Ad."].fillna(0)

    today = datetime.today().strftime('%Y-%m-%d')
    transfer_list = []

    for lot_kodu, group in df_filtered.groupby("LotKodu"):
        avg_cover = group["Mag. S/S"].mean()
        donors = group[(group["Mag. S/S"] > avg_cover) & (group["Mgz Stok Ad."] >= 10)].copy()
        receivers = group[(group["Mag. S/S"] < avg_cover) & (group["Stok Rezerve Ad."] == 0)].copy()

        donor_stok = donors.set_index("DepoAdÄ±")["Mgz Stok Ad."].to_dict()
        receiver_stok = receivers.set_index("DepoAdÄ±")["Mgz Stok Ad."].to_dict()

        for _, donor in donors.iterrows():
            donor_name = donor["DepoAdÄ±"]
            for _, receiver in receivers.iterrows():
                receiver_name = receiver["DepoAdÄ±"]
                if donor_name == receiver_name:
                    continue
                donor_current_stock = donor_stok.get(donor_name, 0)
                receiver_current_stock = receiver_stok.get(receiver_name, 0)
                if donor_current_stock < 10:
                    continue
                max_transfer = int(receiver["SatÄ±ÅŸ Ad."] * 2)
                proposed_qty = math.floor(donor_current_stock / 2)
                transfer_qty = min(proposed_qty, max_transfer)
                if transfer_qty <= 0:
                    continue
                new_donor_stock = donor_current_stock - transfer_qty
                new_receiver_stock = receiver_current_stock + transfer_qty
                donor_final_cover = new_donor_stock / (donor["SatÄ±ÅŸ Ad."] + 1)
                receiver_final_cover = new_receiver_stock / (receiver["SatÄ±ÅŸ Ad."] + 1)

                transfer_list.append({
                    "Analiz Tarihi": today,
                    "ÃœrÃ¼n Kodu": lot_kodu,
                    "ÃœrÃ¼n AdÄ±": donor["LotAdi"],
                    "Transfer Adedi": transfer_qty,
                    "GÃ¶nderen MaÄŸaza": donor_name,
                    "GÃ¶nderen Stok (Ã¶nce)": donor_current_stock,
                    "GÃ¶nderen Cover (Ã¶nce)": round(donor["Mag. S/S"], 2),
                    "GÃ¶nderen Final Cover": round(donor_final_cover, 2),
                    "GÃ¶nderen YTD SatÄ±ÅŸ": donor["YTD SatÄ±ÅŸ Ad."],
                    "Alan MaÄŸaza": receiver_name,
                    "Alan Stok (Ã¶nce)": receiver_current_stock,
                    "Alan Cover (Ã¶nce)": round(receiver["Mag. S/S"], 2),
                    "Alan Final Cover": round(receiver_final_cover, 2),
                    "Alan YTD SatÄ±ÅŸ": receiver["YTD SatÄ±ÅŸ Ad."],
                    "Transfer YÃ¶nÃ¼": f"{donor_name} â†’ {receiver_name}"
                })
                donor_stok[donor_name] = new_donor_stock
                receiver_stok[receiver_name] = new_receiver_stock

    transfer_df = pd.DataFrame(transfer_list)

    if not transfer_df.empty:
        summary_data = {
            "Analiz Tarihi": [today],
            "Toplam ÃœrÃ¼n SayÄ±sÄ±": [transfer_df["ÃœrÃ¼n Kodu"].nunique()],
            "Toplam Transfer SayÄ±sÄ±": [len(transfer_df)],
            "Toplam Transfer Adedi": [transfer_df["Transfer Adedi"].sum()],
            "GÃ¶nderen MaÄŸaza SayÄ±sÄ±": [transfer_df["GÃ¶nderen MaÄŸaza"].nunique()],
            "Alan MaÄŸaza SayÄ±sÄ±": [transfer_df["Alan MaÄŸaza"].nunique()]
        }
        summary_df = pd.DataFrame(summary_data)
        top_donors = transfer_df.groupby("GÃ¶nderen MaÄŸaza")["Transfer Adedi"].sum().sort_values(ascending=False).head(5).reset_index()
        top_donors.columns = ["MaÄŸaza", "GÃ¶nderilen Toplam Adet"]
        top_receivers = transfer_df.groupby("Alan MaÄŸaza")["Transfer Adedi"].sum().sort_values(ascending=False).head(5).reset_index()
        top_receivers.columns = ["MaÄŸaza", "AlÄ±nan Toplam Adet"]
        top_products = transfer_df.groupby(["ÃœrÃ¼n Kodu", "ÃœrÃ¼n AdÄ±"])["Transfer Adedi"].sum().sort_values(ascending=False).head(5).reset_index()
        top_products.columns = ["ÃœrÃ¼n Kodu", "ÃœrÃ¼n AdÄ±", "Toplam Transfer Adedi"]
    else:
        summary_df = pd.DataFrame()
        top_donors = pd.DataFrame()
        top_receivers = pd.DataFrame()
        top_products = pd.DataFrame()

    output = BytesIO()
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        transfer_df.to_excel(writer, sheet_name="Transfer Ã–nerileri", index=False)
        summary_df.to_excel(writer, sheet_name="YÃ¶netici Ã–zeti", index=False, startrow=0)
        top_donors.to_excel(writer, sheet_name="YÃ¶netici Ã–zeti", index=False, startrow=5)
        top_receivers.to_excel(writer, sheet_name="YÃ¶netici Ã–zeti", index=False, startrow=12)
        top_products.to_excel(writer, sheet_name="YÃ¶netici Ã–zeti", index=False, startrow=19)
    output.seek(0)

    st.success("Transfer Ã¶nerileri baÅŸarÄ±yla oluÅŸturuldu!")
    st.download_button(
        label="ðŸ“¥ Excel Raporunu Ä°ndir",
        data=output,
        file_name="transfer_raporu_ve_ozet.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
    st.subheader("ðŸ“‹ Ã–rnek Transfer Tablosu")
    st.dataframe(transfer_df.head(20))
else:
    st.info("BaÅŸlamak iÃ§in bir dosya yÃ¼kleyin.")

